<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>KL Bus Tracker</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
  <style>
    :root {
      --red: #b91d1d;
      --bg-light: #f4f4f8;
      --bg-dark: #1c1c1c;
      --card-light: #ffffff;
      --card-dark: #2c2c2c;
      --text-light: #333;
      --text-dark: #f5f5f5;
      --highlight: #fff3cd;
    }
    body {
      font-family: 'Poppins', sans-serif;
      background-color: var(--bg-light);
      color: var(--text-light);
      margin: 0;
      transition: all 0.4s;
    }
    body.dark {
      background-color: var(--bg-dark);
      color: var(--text-dark);
    }
    header {
      background-color: var(--red);
      color: white;
      text-align: center;
      padding: 25px 20px 30px;
      position: relative;
    }
    header img {
      height: 60px;
      margin-bottom: 8px;
    }
    header h1 {
      margin: 10px 0 5px;
      font-size: 2rem;
    }
    #time {
      font-size: 0.9rem;
      opacity: 0.9;
    }
    .toggle-btn {
      position: absolute;
      top: 20px;
      right: 20px;
      background: white;
      color: var(--red);
      border: none;
      border-radius: 20px;
      padding: 6px 14px;
      font-weight: bold;
      cursor: pointer;
    }
    main {
      max-width: 900px;
      margin: 30px auto;
      padding: 0 20px;
    }
    .section {
      background-color: var(--card-light);
      padding: 25px;
      border-radius: 18px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.07);
      margin-bottom: 30px;
      transition: background 0.3s;
    }
    body.dark .section {
      background-color: var(--card-dark);
    }
    h2 {
      color: var(--red);
      font-size: 1.3rem;
      margin-bottom: 15px;
    }
    .sticky-bar {
      position: sticky;
      top: 0;
      background: var(--bg-light);
      padding-top: 10px;
      z-index: 99;
    }
    select, input {
      width: 100%;
      padding: 12px;
      font-size: 1rem;
      border: 1px solid #ccc;
      border-radius: 10px;
      margin-bottom: 15px;
    }
    #busList {
      display: none; /* Hide initially */
    }
    .bus-card {
      background: #f7f7f7;
      border-left: 5px solid var(--red);
      padding: 15px 20px;
      border-radius: 12px;
      margin-bottom: 15px;
      position: relative;
      transition: background 0.3s ease;
    }
    body.dark .bus-card {
      background: #333;
    }
    .bus-card.highlight {
      background-color: var(--highlight);
    }
    .bus-card h3 {
      margin-bottom: 6px;
      font-size: 1.1rem;
      color: var(--red);
    }
    .bus-card p {
      margin: 3px 0;
    }
    .stops {
      display: none;
      margin-top: 10px;
      padding-left: 10px;
      border-left: 2px dashed var(--red);
      font-size: 0.95rem;
    }
    .bus-icon {
      position: absolute;
      top: 16px;
      right: 20px;
      font-size: 1.4rem;
      animation: moveBus 2s infinite alternate;
    }
    @keyframes moveBus {
      0% { transform: translateX(0); }
      100% { transform: translateX(6px); }
    }
    .tip {
      text-align: center;
      padding: 12px;
      background: #ffe8e8;
      border-left: 4px solid var(--red);
      border-radius: 10px;
      font-size: 0.95rem;
      margin-top: 10px;
      min-height: 24px;
    }
    .map-link {
      text-align: center;
      margin-top: 20px;
    }
    .map-link a {
      color: var(--red);
      font-weight: 600;
      text-decoration: none;
    }
    .map-link a:hover {
      text-decoration: underline;
    }
    #topBtn {
      position: fixed;
      bottom: 20px;
      right: 20px;
      z-index: 100;
      font-size: 16px;
      padding: 10px 14px;
      background: var(--red);
      color: white;
      border: none;
      border-radius: 6px;
      display: none;
      cursor: pointer;
    }
    footer {
      text-align: center;
      font-size: 0.9rem;
      color: #777;
      padding: 20px;
    }
  </style>
</head>
<body onload="initApp()">
  <header>
    <img src="kluh.jpg" alt="KL University Logo">
    <h1>KL Bus Tracker</h1>
    <div id="time">Time Loading...</div>
    <button class="toggle-btn" onclick="toggleMode()">üåô Dark Mode</button>
  </header>
  <main>
    <div class="section sticky-bar">
      <h2>üß≠ Select Your City & Search</h2>
      <select id="city" onchange="showBuses()">
        <option value="">-- Choose City --</option>
        <option value="vijayawada">Vijayawada</option>
        <option value="hyderabad">Hyderabad</option>
      </select>
      <input type="text" id="search" oninput="filterBuses()" placeholder="üîç Search bus or stop name...">
      <p id="busCount"></p>
    </div>
    <div id="busList" class="section"></div>
    <div class="tip section" id="studentTip"></div>
    <div class="map-link">
      <a href="https://www.google.com/maps/place/KL+University/@16.4411366,80.6211824,15z" target="_blank">
        üìç View KL University Bus Route Map
      </a>
    </div>
  </main>
  <button onclick="scrollToTop()" id="topBtn">‚¨Ü Top</button>
  <footer>
    &copy; 2025 KL University ¬∑ Built by Students üöå
  </footer>

  <script>
    const busesData = {
      vijayawada: [
        { id: "Bus 10", status: "On Time", eta: "15 mins", stops: ["Benz Circle", "Ramavarappadu", "KL University"] },
        { id: "Bus 1", status: "Delayed", eta: "25 mins", stops: ["PNBS", "Mangalagiri", "KL University"] },
        { id: "Bus 15", status: "On Time", eta: "8 mins", stops: ["Gollapudi", "Kesarapalli", "KL University"] }
      ],
      hyderabad: [
        { id: "Bus 8", status: "On Time", eta: "20 mins", stops: ["KPHB", "Miyapur", "KL University"] },
        { id: "Bus 2", status: "On Time", eta: "12 mins", stops: ["Ameerpet", "LB Nagar", "KL University"] },
        { id: "Bus 11", status: "Delayed", eta: "30 mins", stops: ["Mehdipatnam", "Gachibowli", "KL University"] }
      ]
    };

    const tips = [
      "üì¢ Keep phone on silent to maintain bus decorum.",
      "üé´ Always carry your college ID card while boarding.",
      "üïí Arrive at your stop 5 minutes early to avoid delays.",
      "üì∂ Share your live location with friends for safety."
    ];

    let currentCity = "", currentBuses = [], tipIndex = 0;

    function initApp() {
      showClock();
      rotateTips();
      window.onscroll = () => {
        document.getElementById("topBtn").style.display = window.scrollY > 300 ? "block" : "none";
      };
    }

    function showClock() {
      setInterval(() => {
        document.getElementById("time").textContent = new Date().toLocaleDateString() + " | " + new Date().toLocaleTimeString();
      }, 1000);
    }

    function showBuses() {
      const city = document.getElementById("city").value;
      currentCity = city;
      currentBuses = busesData[city] || [];
      renderBuses(currentBuses);
    }

    function renderBuses(buses) {
      const list = document.getElementById("busList");
      const count = document.getElementById("busCount");

      if (buses.length === 0) {
        list.style.display = "none";
        count.textContent = "";
        return;
      }

      list.style.display = "block";
      count.textContent = `Showing ${buses.length} buses in ${currentCity.charAt(0).toUpperCase() + currentCity.slice(1)}`;

      list.innerHTML = buses.map((bus, i) => {
        const etaNum = parseInt(bus.eta);
        const highlight = etaNum <= 10 ? 'highlight' : '';
        return `
          <div class="bus-card ${highlight}" onclick="toggleStops(${i})">
            <div class="bus-icon">üöå</div>
            <h3>${bus.id}</h3>
            <p>Status: ${bus.status}</p>
            <p>ETA: ${bus.eta}</p>
            <div class="stops" id="stops-${i}">
              <strong>Stops:</strong>
              <ul>${bus.stops.map(stop => `<li>${stop}</li>`).join('')}</ul>
            </div>
          </div>
        `;
      }).join('');
    }

    function toggleStops(index) {
      const stops = document.getElementById(`stops-${index}`);
      stops.style.display = stops.style.display === "block" ? "none" : "block";
    }

    function filterBuses() {
      const query = document.getElementById("search").value.toLowerCase();
      const filtered = currentBuses.filter(bus =>
        bus.id.toLowerCase().includes(query) ||
        bus.stops.some(stop => stop.toLowerCase().includes(query))
      );
      renderBuses(filtered);
    }

    function toggleMode() {
      document.body.classList.toggle("dark");
      document.querySelector(".toggle-btn").textContent =
        document.body.classList.contains("dark") ? "‚òÄÔ∏è Light Mode" : "üåô Dark Mode";
    }

    function rotateTips() {
      document.getElementById("studentTip").textContent = tips[tipIndex];
      setInterval(() => {
        tipIndex = (tipIndex + 1) % tips.length;
        document.getElementById("studentTip").textContent = tips[tipIndex];
      }, 5000);
    }

    function scrollToTop() {
      window.scrollTo({ top: 0, behavior: 'smooth' });
    }
  </script>
</body>
</html>
